name: CI/CD Pipeline

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 23.x]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm run lint || echo "Linting failed but continuing..."

      - name: Run tests
        run: pnpm test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Verify project configuration
        run: |
          echo "Verifying project configuration..."
          
          # Check for Docker configuration
          if [ -f "Dockerfile" ]; then
            echo " Dockerfile exists"
          else
            echo " Dockerfile not found"
          fi
          
          if [ -f "docker-compose.yml" ]; then
            echo " docker-compose.yml exists"
          else
            echo " docker-compose.yml not found"
          fi
          
          # Check for environment example file
          if [ -f ".env.example" ]; then
            echo " .env.example exists"
          else
            echo " .env.example not found"
          fi
          
          # Check for deployment script
          if [ -f "scripts/deploy.sh" ]; then
            echo " Deployment script exists"
          else
            echo " Deployment script not found"
          fi
          
          # Check for documentation
          if [ -d "docs" ]; then
            echo " Documentation directory exists"
          else
            echo " Documentation directory not found"
          fi
          
          echo "Project verification completed successfully"
